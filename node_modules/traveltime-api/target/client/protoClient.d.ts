import { Credentials } from '../types';
import { TimeFilterFastProtoDistanceRequest, TimeFilterFastProtoRequest, TimeFilterFastProtoResponse } from '../types/proto';
import { RateLimitSettings } from './rateLimiter';
export declare class TravelTimeProtoClient {
    private apiKey;
    private applicationId;
    private axiosInstance;
    private baseURL;
    private protoFileDir;
    private transportationMap;
    private rateLimiter;
    constructor(credentials: Credentials, parameters?: {
        rateLimitSettings?: Partial<RateLimitSettings>;
        baseUrl?: string;
    });
    private encodeFixedPoint;
    private buildRequestUrl;
    private buildDeltas;
    private buildProtoRequest;
    private readProtoFile;
    private handleProtoFile;
    timeFilterFast: (request: TimeFilterFastProtoRequest) => Promise<TimeFilterFastProtoResponse>;
    timeFilterFastDistance: (request: TimeFilterFastProtoDistanceRequest) => Promise<TimeFilterFastProtoResponse>;
    setRateLimitSettings: (settings: Partial<RateLimitSettings>) => void;
    getBaseURL: () => string;
    /**
     *
     * @param baseURL Set new base URL. Pass nothing to reset to default
     */
    setBaseURL: (baseURL?: string) => void;
    setCredentials: (credentials: Credentials) => void;
}
