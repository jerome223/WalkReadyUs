{"ast":null,"code":"var _jsxFileName = \"/Users/elodielabrecquelanglais/Desktop/WalkReadyUs/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport { getTravelTimeData } from './TravelTime';\nimport axios from 'axios';\nimport { Polygon } from 'react-leaflet';\nimport L from 'leaflet';\nimport pinIcon from './pin.png';\nimport comIcon from './com.png';\nimport medIcon from './med.png';\nimport epiceIcon from './epice.png';\nimport pharmIcon from './pharm.png';\nimport restoIcon from './resto.png';\nimport parcIcon from './parc.png';\nimport { isPointInsidePolygon } from './VerifyInside';\nimport { fetchAndParseCSV } from './CsvParse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [position, setPosition] = useState([45.5017, -73.5673]); // Montreal's coordinates as default\n  const [address, setAddress] = useState('2500 Polytechnique');\n  const [time, setTime] = useState('15'); // New state for time in minutes\n  const [isochrone, setIsochrone] = useState([]);\n  const [insidePoints, setInsidePoints] = useState({\n    com: [],\n    med: [],\n    parc: [],\n    pharmacie: [],\n    resto: [],\n    epicerie: []\n  });\n  const [checkboxStates, setCheckboxStates] = useState({\n    com: false,\n    med: false,\n    parc: false,\n    pharmacie: false,\n    resto: false,\n    epicerie: false\n  });\n  const handleCheckboxChange = option => e => {\n    setCheckboxStates({\n      ...checkboxStates,\n      [option]: e.target.checked\n    });\n  };\n  const updatePosition = (lat, lng) => {\n    setPosition([lat, lng]);\n  };\n  const fetchAndSetPointsForCategory = async (category, csvFilePath, shapes) => {\n    const points = await fetchAndParseCSV(csvFilePath);\n    const insidePoints = points.filter(point => isPointInsidePolygon([point.lat, point.lng], shapes));\n    console.log(category, insidePoints);\n    setInsidePoints(prevState => ({\n      ...prevState,\n      [category]: insidePoints\n    }));\n  };\n  const searchAddress = async () => {\n    const geocodingUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${address}`;\n    try {\n      const geoResponse = await axios.get(geocodingUrl);\n      const geoData = geoResponse.data;\n      //console.log(geoData);\n      if (geoData && geoData.length > 0) {\n        const {\n          lat,\n          lon\n        } = geoData[0];\n        updatePosition(parseFloat(lat), parseFloat(lon));\n        console.log(lat, lon);\n        // Ensure the time is correctly parsed as an integer\n        //lng = lon;\n        const data = await getTravelTimeData(parseFloat(lat), parseFloat(lon), parseInt(time, 10));\n        //console.log(data);\n        if (data && data.results && data.results[0].shapes) {\n          const isochroneShapes = data.results[0].shapes.map(shape => shape.shell);\n          setIsochrone(isochroneShapes);\n          if (isochroneShapes.length > 0) {\n            // Ensure isochroneShapes is not empty\n            fetchAndSetPointsForCategory('com', './com.csv', isochroneShapes[0]);\n            fetchAndSetPointsForCategory('med', './med.csv', isochroneShapes[0]);\n            fetchAndSetPointsForCategory('parc', './parc.csv', isochroneShapes[0]);\n            fetchAndSetPointsForCategory('pharmacie', './pharmacie.csv', isochroneShapes[0]);\n            fetchAndSetPointsForCategory('resto', './resto.csv', isochroneShapes[0]);\n            fetchAndSetPointsForCategory('epicerie', './epicerie.csv', isochroneShapes[0]);\n\n            //checkPointsInsideIsochrone();\n          }\n        }\n      } else {\n        alert('Address not found!');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to search the address or get travel time data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Ton adresse icitte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\" // Ensures only numbers can be entered\n      ,\n      value: time,\n      onChange: e => setTime(e.target.value),\n      placeholder: \"Temps de marche en minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchAddress,\n      children: \"Chercher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(checkboxStates).map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checkboxStates[option],\n          onChange: handleCheckboxChange(option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, this), \" \", option.replace('option', 'Option ')]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      address: address,\n      position: position,\n      isochrone: isochrone,\n      insidePoints: insidePoints,\n      checkboxStates: checkboxStates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"areZOclCoMz4hRUQGLgguNT7JAU=\");\n_c = App;\nfunction MapUpdater({\n  position\n}) {\n  _s2();\n  const map = useMap();\n  React.useEffect(() => {\n    map.flyTo(position, map.getZoom());\n  }, [position, map]);\n  return null; // This component does not render anything itself.\n}\n_s2(MapUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapUpdater;\nconst customIcon = new L.Icon({\n  iconUrl: pinIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst comMarkerIcon = new L.Icon({\n  iconUrl: comIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst medMarkerIcon = new L.Icon({\n  iconUrl: medIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst parcMarkerIcon = new L.Icon({\n  iconUrl: parcIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst pharmMarkerIcon = new L.Icon({\n  iconUrl: pharmIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst epiceMarkerIcon = new L.Icon({\n  iconUrl: epiceIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst restoMarkerIcon = new L.Icon({\n  iconUrl: restoIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst MapView = ({\n  address,\n  position,\n  isochrone,\n  insidePoints,\n  checkboxStates\n}) => {\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: position,\n    zoom: 14,\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [address, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }, this), \" We know where you live now.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), checkboxStates.com && insidePoints.com.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: comMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Centre communautaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)), checkboxStates.med && insidePoints.med.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: medMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Service m\\xE9dical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)), checkboxStates.parc && insidePoints.parc.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: parcMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Parc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)), checkboxStates.pharmacie && insidePoints.pharmacie.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: pharmMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Pharmacie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)), checkboxStates.resto && insidePoints.resto.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: restoMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)), checkboxStates.epicerie && insidePoints.epicerie.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: epiceMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"\\xC9picerie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)), isochrone.map((area, index) => /*#__PURE__*/_jsxDEV(Polygon, {\n      positions: area,\n      color: \"blue\",\n      fillOpacity: 0.3\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(MapUpdater, {\n      position: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MapView;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MapUpdater\");\n$RefreshReg$(_c3, \"MapView\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","useMap","getTravelTimeData","axios","Polygon","L","pinIcon","comIcon","medIcon","epiceIcon","pharmIcon","restoIcon","parcIcon","isPointInsidePolygon","fetchAndParseCSV","jsxDEV","_jsxDEV","App","_s","position","setPosition","address","setAddress","time","setTime","isochrone","setIsochrone","insidePoints","setInsidePoints","com","med","parc","pharmacie","resto","epicerie","checkboxStates","setCheckboxStates","handleCheckboxChange","option","e","target","checked","updatePosition","lat","lng","fetchAndSetPointsForCategory","category","csvFilePath","shapes","points","filter","point","console","log","prevState","searchAddress","geocodingUrl","geoResponse","get","geoData","data","length","lon","parseFloat","parseInt","results","isochroneShapes","map","shape","shell","alert","error","className","children","type","value","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","replace","MapView","_c","MapUpdater","_s2","useEffect","flyTo","getZoom","_c2","customIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","comMarkerIcon","medMarkerIcon","parcMarkerIcon","pharmMarkerIcon","epiceMarkerIcon","restoMarkerIcon","center","zoom","style","height","width","url","attribution","icon","index","area","positions","color","fillOpacity","_c3","$RefreshReg$"],"sources":["/Users/elodielabrecquelanglais/Desktop/WalkReadyUs/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport { getTravelTimeData } from './TravelTime';\nimport axios from 'axios';\nimport { Polygon } from 'react-leaflet';\nimport L from 'leaflet';\nimport pinIcon from './pin.png';\nimport comIcon from './com.png';\nimport medIcon from './med.png';\nimport epiceIcon from './epice.png';\nimport pharmIcon from './pharm.png';\nimport restoIcon from './resto.png';\nimport parcIcon from './parc.png';\nimport { isPointInsidePolygon } from './VerifyInside';\nimport { fetchAndParseCSV } from './CsvParse'; \n\n\nfunction App() {\n  const [position, setPosition] = useState([45.5017, -73.5673]); // Montreal's coordinates as default\n  const [address, setAddress] = useState('2500 Polytechnique');\n  const [time, setTime] = useState('15'); // New state for time in minutes\n  const [isochrone, setIsochrone] = useState([]);\n  const [insidePoints, setInsidePoints] = useState({\n    com: [],\n    med: [],\n    parc: [],\n    pharmacie: [],\n    resto: [],\n    epicerie: []\n  });\n  const [checkboxStates, setCheckboxStates] = useState({\n    com: false,\n    med: false,\n    parc: false,\n    pharmacie: false,\n    resto: false,\n    epicerie: false\n  });\n  \n  \n  \n  const handleCheckboxChange = (option) => (e) => {\n  setCheckboxStates({ ...checkboxStates, [option]: e.target.checked });\n  };\n  \n  const updatePosition = (lat, lng) => {\n    setPosition([lat, lng]);\n  };\n\n  const fetchAndSetPointsForCategory = async (category, csvFilePath, shapes) => {\n    const points = await fetchAndParseCSV(csvFilePath);\n    const insidePoints = points.filter(point => \n      isPointInsidePolygon([point.lat, point.lng], shapes)\n    );\n    console.log(category, insidePoints);\n    setInsidePoints(prevState => ({ ...prevState, [category]: insidePoints }));\n  };\n  \n\n  const searchAddress = async () => {\n    const geocodingUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${address}`;\n    try {\n      const geoResponse = await axios.get(geocodingUrl);\n      const geoData = geoResponse.data;\n      //console.log(geoData);\n      if (geoData && geoData.length > 0) {\n        const { lat, lon } = geoData[0];\n        updatePosition(parseFloat(lat), parseFloat(lon));\n        console.log(lat, lon);\n        // Ensure the time is correctly parsed as an integer\n        //lng = lon;\n        const data = await getTravelTimeData(parseFloat(lat), parseFloat(lon), parseInt(time, 10));\n        //console.log(data);\n          if (data && data.results && data.results[0].shapes) \n            {\n              const isochroneShapes = data.results[0].shapes.map(shape => shape.shell);\n              setIsochrone(isochroneShapes);\n\n          \n              if (isochroneShapes.length > 0) { // Ensure isochroneShapes is not empty\n                fetchAndSetPointsForCategory('com', './com.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('med', './med.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('parc', './parc.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('pharmacie', './pharmacie.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('resto', './resto.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('epicerie', './epicerie.csv', isochroneShapes[0]);\n                \n                //checkPointsInsideIsochrone();\n              }\n            }\n        } \n        else {\n              alert('Address not found!');\n             }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to search the address or get travel time data.');\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        placeholder=\"Ton adresse icitte\"\n      />\n       <input\n        type=\"number\" // Ensures only numbers can be entered\n        value={time}\n        onChange={(e) => setTime(e.target.value)}\n        placeholder=\"Temps de marche en minutes\"\n      />\n      <button onClick={searchAddress}>Chercher</button>\n\n          {/* Adding checkboxes */}\n          <div>\n              {Object.keys(checkboxStates).map((option) => (\n                <label key={option}>\n                  <input\n                    type=\"checkbox\"\n                    checked={checkboxStates[option]}\n                    onChange={handleCheckboxChange(option)}\n                  /> {option.replace('option', 'Option ')}\n                </label>\n              ))}\n          </div>\n\n\n\n      <MapView \n        address={address}\n        position={position} \n        isochrone={isochrone} \n        insidePoints={insidePoints} \n        checkboxStates={checkboxStates}/>\n    </div>\n  );\n}\n\nfunction MapUpdater({ position }) {\n  const map = useMap();\n\n  React.useEffect(() => {\n    map.flyTo(position, map.getZoom());\n  }, [position, map]);\n\n  return null; // This component does not render anything itself.\n}\n\nconst customIcon = new L.Icon({\n  iconUrl: pinIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst comMarkerIcon = new L.Icon({\n  iconUrl: comIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst medMarkerIcon = new L.Icon({\n  iconUrl: medIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst parcMarkerIcon = new L.Icon({\n  iconUrl: parcIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst pharmMarkerIcon = new L.Icon({\n  iconUrl: pharmIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst epiceMarkerIcon = new L.Icon({\n  iconUrl: epiceIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst restoMarkerIcon = new L.Icon({\n  iconUrl: restoIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\n\nconst MapView = ({ address, position, isochrone, insidePoints, checkboxStates }) => {\n  return (\n    <MapContainer center={position} zoom={14} style={{ height: '100vh', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={position} icon={customIcon}>\n        <Popup>\n        {address} <br/> We know where you live now.\n        </Popup>\n      </Marker>\n      \n      {checkboxStates.com && insidePoints.com.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={comMarkerIcon}>\n          <Popup>Centre communautaire</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.med && insidePoints.med.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={medMarkerIcon}>\n          <Popup>Service médical</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.parc && insidePoints.parc.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={parcMarkerIcon}>\n          <Popup>Parc</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.pharmacie && insidePoints.pharmacie.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={pharmMarkerIcon}>\n          <Popup>Pharmacie</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.resto && insidePoints.resto.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={restoMarkerIcon}>\n          <Popup>Restaurant</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.epicerie && insidePoints.epicerie.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={epiceMarkerIcon}>\n          <Popup>Épicerie</Popup>\n        </Marker>\n      ))}\n\n      {isochrone.map((area, index) => (\n        <Polygon key={index} positions={area} color=\"blue\" fillOpacity={0.3} />\n      ))}\n      <MapUpdater position={position} />\n    </MapContainer>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}