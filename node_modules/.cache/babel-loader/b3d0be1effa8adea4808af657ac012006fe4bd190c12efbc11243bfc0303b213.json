{"ast":null,"code":"import React,{useState}from'react';import{MapContainer,TileLayer,Marker,Popup,useMap}from'react-leaflet';import'leaflet/dist/leaflet.css';import'./App.css';import{getTravelTimeData}from'./TravelTime';import axios from'axios';import{Polygon}from'react-leaflet';import L from'leaflet';import pinIcon from'./pin.png';import comIcon from'./com.png';import medIcon from'./med.png';import epiceIcon from'./epice.png';import pharmIcon from'./pharm.png';import restoIcon from'./resto.png';import parcIcon from'./parc.png';import{isPointInsidePolygon}from'./VerifyInside';import{fetchAndParseCSV}from'./CsvParse';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[position,setPosition]=useState([45.5017,-73.5673]);// Montreal's coordinates as default\nconst[address,setAddress]=useState('2500 Polytechnique');const[time,setTime]=useState('15');// New state for time in minutes\nconst[isochrone,setIsochrone]=useState([]);const[insidePoints,setInsidePoints]=useState({com:[],med:[],parc:[],pharmacie:[],resto:[],epicerie:[]});const[checkboxStates,setCheckboxStates]=useState({com:false,med:false,parc:false,pharmacie:false,resto:false,epicerie:false});const handleCheckboxChange=option=>e=>{setCheckboxStates({...checkboxStates,[option]:e.target.checked});};const updatePosition=(lat,lng)=>{setPosition([lat,lng]);};const fetchAndSetPointsForCategory=async(category,csvFilePath,shapes)=>{const points=await fetchAndParseCSV(csvFilePath);const insidePoints=points.filter(point=>isPointInsidePolygon([point.lat,point.lng],shapes));console.log(category,insidePoints);setInsidePoints(prevState=>({...prevState,[category]:insidePoints}));};const searchAddress=async()=>{const geocodingUrl=\"https://nominatim.openstreetmap.org/search?format=json&q=\".concat(address);try{const geoResponse=await axios.get(geocodingUrl);const geoData=geoResponse.data;//console.log(geoData);\nif(geoData&&geoData.length>0){const{lat,lon}=geoData[0];updatePosition(parseFloat(lat),parseFloat(lon));console.log(lat,lon);// Ensure the time is correctly parsed as an integer\n//lng = lon;\nconst data=await getTravelTimeData(parseFloat(lat),parseFloat(lon),parseInt(time,10));//console.log(data);\nif(data&&data.results&&data.results[0].shapes){const isochroneShapes=data.results[0].shapes.map(shape=>shape.shell);setIsochrone(isochroneShapes);if(isochroneShapes.length>0){// Ensure isochroneShapes is not empty\nfetchAndSetPointsForCategory('com','./com.csv',isochroneShapes[0]);fetchAndSetPointsForCategory('med','./med.csv',isochroneShapes[0]);fetchAndSetPointsForCategory('parc','./parc.csv',isochroneShapes[0]);fetchAndSetPointsForCategory('pharmacie','./pharmacie.csv',isochroneShapes[0]);fetchAndSetPointsForCategory('resto','./resto.csv',isochroneShapes[0]);fetchAndSetPointsForCategory('epicerie','./epicerie.csv',isochroneShapes[0]);//checkPointsInsideIsochrone();\n}}}else{alert('Address not found!');}}catch(error){console.error('Error:',error);alert('Failed to search the address or get travel time data.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:address,onChange:e=>setAddress(e.target.value),placeholder:\"Ton adresse icitte\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\"// Ensures only numbers can be entered\n,value:time,onChange:e=>setTime(e.target.value),placeholder:\"Temps de marche en minutes\"}),/*#__PURE__*/_jsx(\"button\",{onClick:searchAddress,children:\"Chercher\"}),/*#__PURE__*/_jsx(\"div\",{children:Object.keys(checkboxStates).map(option=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkboxStates[option],onChange:handleCheckboxChange(option)}),\" \",option.replace('option','Option ')]},option))}),/*#__PURE__*/_jsx(MapView,{address:address,position:position,isochrone:isochrone,insidePoints:insidePoints,checkboxStates:checkboxStates})]});}function MapUpdater(_ref){let{position}=_ref;const map=useMap();React.useEffect(()=>{map.flyTo(position,map.getZoom());},[position,map]);return null;// This component does not render anything itself.\n}const customIcon=new L.Icon({iconUrl:pinIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const comMarkerIcon=new L.Icon({iconUrl:comIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const medMarkerIcon=new L.Icon({iconUrl:medIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const parcMarkerIcon=new L.Icon({iconUrl:parcIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const pharmMarkerIcon=new L.Icon({iconUrl:pharmIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const epiceMarkerIcon=new L.Icon({iconUrl:epiceIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const restoMarkerIcon=new L.Icon({iconUrl:restoIcon,iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});const MapView=_ref2=>{let{address,position,isochrone,insidePoints,checkboxStates}=_ref2;return/*#__PURE__*/_jsxs(MapContainer,{center:position,zoom:14,style:{height:'100vh',width:'100%'},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/_jsx(Marker,{position:position,icon:customIcon,children:/*#__PURE__*/_jsxs(Popup,{children:[address,\" \",/*#__PURE__*/_jsx(\"br\",{}),\" We know where you live now.\"]})}),checkboxStates.com&&insidePoints.com.map((point,index)=>/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lng],icon:comMarkerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Communaut\\xE9\"})},index)),checkboxStates.med&&insidePoints.med.map((point,index)=>/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lng],icon:medMarkerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Communaut\\xE9\"})},index)),checkboxStates.parc&&insidePoints.parc.map((point,index)=>/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lng],icon:parcMarkerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Communaut\\xE9\"})},index)),checkboxStates.pharmacie&&insidePoints.pharmacie.map((point,index)=>/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lng],icon:pharmMarkerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Communaut\\xE9\"})},index)),checkboxStates.resto&&insidePoints.resto.map((point,index)=>/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lng],icon:restoMarkerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Communaut\\xE9\"})},index)),checkboxStates.epicerie&&insidePoints.epicerie.map((point,index)=>/*#__PURE__*/_jsx(Marker,{position:[point.lat,point.lng],icon:epiceMarkerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Communaut\\xE9\"})},index)),isochrone.map((area,index)=>/*#__PURE__*/_jsx(Polygon,{positions:area,color:\"blue\",fillOpacity:0.3},index)),/*#__PURE__*/_jsx(MapUpdater,{position:position})]});};export default App;","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","useMap","getTravelTimeData","axios","Polygon","L","pinIcon","comIcon","medIcon","epiceIcon","pharmIcon","restoIcon","parcIcon","isPointInsidePolygon","fetchAndParseCSV","jsx","_jsx","jsxs","_jsxs","App","position","setPosition","address","setAddress","time","setTime","isochrone","setIsochrone","insidePoints","setInsidePoints","com","med","parc","pharmacie","resto","epicerie","checkboxStates","setCheckboxStates","handleCheckboxChange","option","e","target","checked","updatePosition","lat","lng","fetchAndSetPointsForCategory","category","csvFilePath","shapes","points","filter","point","console","log","prevState","searchAddress","geocodingUrl","concat","geoResponse","get","geoData","data","length","lon","parseFloat","parseInt","results","isochroneShapes","map","shape","shell","alert","error","className","children","type","value","onChange","placeholder","onClick","Object","keys","replace","MapView","MapUpdater","_ref","useEffect","flyTo","getZoom","customIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","comMarkerIcon","medMarkerIcon","parcMarkerIcon","pharmMarkerIcon","epiceMarkerIcon","restoMarkerIcon","_ref2","center","zoom","style","height","width","url","attribution","icon","index","area","positions","color","fillOpacity"],"sources":["/Users/elodielabrecquelanglais/Desktop/WalkReadyUs/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport { getTravelTimeData } from './TravelTime';\nimport axios from 'axios';\nimport { Polygon } from 'react-leaflet';\nimport L from 'leaflet';\nimport pinIcon from './pin.png';\nimport comIcon from './com.png';\nimport medIcon from './med.png';\nimport epiceIcon from './epice.png';\nimport pharmIcon from './pharm.png';\nimport restoIcon from './resto.png';\nimport parcIcon from './parc.png';\nimport { isPointInsidePolygon } from './VerifyInside';\nimport { fetchAndParseCSV } from './CsvParse'; \n\n\nfunction App() {\n  const [position, setPosition] = useState([45.5017, -73.5673]); // Montreal's coordinates as default\n  const [address, setAddress] = useState('2500 Polytechnique');\n  const [time, setTime] = useState('15'); // New state for time in minutes\n  const [isochrone, setIsochrone] = useState([]);\n  const [insidePoints, setInsidePoints] = useState({\n    com: [],\n    med: [],\n    parc: [],\n    pharmacie: [],\n    resto: [],\n    epicerie: []\n  });\n  const [checkboxStates, setCheckboxStates] = useState({\n    com: false,\n    med: false,\n    parc: false,\n    pharmacie: false,\n    resto: false,\n    epicerie: false\n  });\n  \n  \n  \n  const handleCheckboxChange = (option) => (e) => {\n  setCheckboxStates({ ...checkboxStates, [option]: e.target.checked });\n  };\n  \n  const updatePosition = (lat, lng) => {\n    setPosition([lat, lng]);\n  };\n\n  const fetchAndSetPointsForCategory = async (category, csvFilePath, shapes) => {\n    const points = await fetchAndParseCSV(csvFilePath);\n    const insidePoints = points.filter(point => \n      isPointInsidePolygon([point.lat, point.lng], shapes)\n    );\n    console.log(category, insidePoints);\n    setInsidePoints(prevState => ({ ...prevState, [category]: insidePoints }));\n  };\n  \n\n  const searchAddress = async () => {\n    const geocodingUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${address}`;\n    try {\n      const geoResponse = await axios.get(geocodingUrl);\n      const geoData = geoResponse.data;\n      //console.log(geoData);\n      if (geoData && geoData.length > 0) {\n        const { lat, lon } = geoData[0];\n        updatePosition(parseFloat(lat), parseFloat(lon));\n        console.log(lat, lon);\n        // Ensure the time is correctly parsed as an integer\n        //lng = lon;\n        const data = await getTravelTimeData(parseFloat(lat), parseFloat(lon), parseInt(time, 10));\n        //console.log(data);\n          if (data && data.results && data.results[0].shapes) \n            {\n              const isochroneShapes = data.results[0].shapes.map(shape => shape.shell);\n              setIsochrone(isochroneShapes);\n\n          \n              if (isochroneShapes.length > 0) { // Ensure isochroneShapes is not empty\n                fetchAndSetPointsForCategory('com', './com.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('med', './med.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('parc', './parc.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('pharmacie', './pharmacie.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('resto', './resto.csv', isochroneShapes[0]);\n                fetchAndSetPointsForCategory('epicerie', './epicerie.csv', isochroneShapes[0]);\n                \n                //checkPointsInsideIsochrone();\n              }\n            }\n        } \n        else {\n              alert('Address not found!');\n             }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to search the address or get travel time data.');\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        placeholder=\"Ton adresse icitte\"\n      />\n       <input\n        type=\"number\" // Ensures only numbers can be entered\n        value={time}\n        onChange={(e) => setTime(e.target.value)}\n        placeholder=\"Temps de marche en minutes\"\n      />\n      <button onClick={searchAddress}>Chercher</button>\n\n          {/* Adding checkboxes */}\n          <div>\n              {Object.keys(checkboxStates).map((option) => (\n                <label key={option}>\n                  <input\n                    type=\"checkbox\"\n                    checked={checkboxStates[option]}\n                    onChange={handleCheckboxChange(option)}\n                  /> {option.replace('option', 'Option ')}\n                </label>\n              ))}\n          </div>\n\n\n\n      <MapView \n        address={address}\n        position={position} \n        isochrone={isochrone} \n        insidePoints={insidePoints} \n        checkboxStates={checkboxStates}/>\n    </div>\n  );\n}\n\nfunction MapUpdater({ position }) {\n  const map = useMap();\n\n  React.useEffect(() => {\n    map.flyTo(position, map.getZoom());\n  }, [position, map]);\n\n  return null; // This component does not render anything itself.\n}\n\nconst customIcon = new L.Icon({\n  iconUrl: pinIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst comMarkerIcon = new L.Icon({\n  iconUrl: comIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst medMarkerIcon = new L.Icon({\n  iconUrl: medIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst parcMarkerIcon = new L.Icon({\n  iconUrl: parcIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst pharmMarkerIcon = new L.Icon({\n  iconUrl: pharmIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst epiceMarkerIcon = new L.Icon({\n  iconUrl: epiceIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst restoMarkerIcon = new L.Icon({\n  iconUrl: restoIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\n\nconst MapView = ({ address, position, isochrone, insidePoints, checkboxStates }) => {\n  return (\n    <MapContainer center={position} zoom={14} style={{ height: '100vh', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={position} icon={customIcon}>\n        <Popup>\n        {address} <br/> We know where you live now.\n        </Popup>\n      </Marker>\n      \n      {checkboxStates.com && insidePoints.com.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={comMarkerIcon}>\n          <Popup>Communauté</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.med && insidePoints.med.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={medMarkerIcon}>\n          <Popup>Communauté</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.parc && insidePoints.parc.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={parcMarkerIcon}>\n          <Popup>Communauté</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.pharmacie && insidePoints.pharmacie.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={pharmMarkerIcon}>\n          <Popup>Communauté</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.resto && insidePoints.resto.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={restoMarkerIcon}>\n          <Popup>Communauté</Popup>\n        </Marker>\n      ))}\n\n      {checkboxStates.epicerie && insidePoints.epicerie.map((point, index) => (\n        <Marker key={index} position={[point.lat, point.lng]} icon={epiceMarkerIcon}>\n          <Popup>Communauté</Popup>\n        </Marker>\n      ))}\n\n      {isochrone.map((area, index) => (\n        <Polygon key={index} positions={area} color=\"blue\" fillOpacity={0.3} />\n      ))}\n      <MapUpdater position={position} />\n    </MapContainer>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}