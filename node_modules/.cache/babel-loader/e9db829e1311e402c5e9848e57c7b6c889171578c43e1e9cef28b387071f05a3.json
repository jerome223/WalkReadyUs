{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierk\\\\OneDrive\\\\Desktop\\\\courseraRxNtv\\\\WalkReadyUs\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport { getTravelTimeData } from './TravelTime';\nimport axios from 'axios';\nimport { Polygon } from 'react-leaflet';\nimport L from 'leaflet';\nimport pinIcon from './pin.png';\nimport comIcon from './com.png';\nimport medIcon from './med.png';\nimport epiceIcon from './epice.png';\nimport pharmIcon from './pharm.png';\nimport restoIcon from './resto.png';\nimport parcIcon from './parc.png';\nimport { isPointInsidePolygon } from './VerifyInside';\n//import { fetchAndParseCSV } from './CsvParse';\nimport { fetchNearbyUtilities } from './FetchNearby';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [position, setPosition] = useState([45.5017, -73.5673]); // Montreal's coordinates as default\n  const [address, setAddress] = useState('2500 Chem. de Polytechnique, MontrÃ©al, QC H3T 1J4, Canada');\n  const autocompleteInput = useRef(null);\n  let autocomplete = null;\n  const [time, setTime] = useState('15'); // New state for time in minutes\n  const [isochrone, setIsochrone] = useState([]);\n  const [insidePoints, setInsidePoints] = useState({\n    library: [],\n    hospital: [],\n    park: [],\n    pharmacy: [],\n    restaurant: [],\n    supermarket: []\n  });\n  const [checkboxStates, setCheckboxStates] = useState({\n    Bibliotheques: false,\n    CentresMedicaux: false,\n    Parcs: false,\n    Pharmacies: false,\n    Restaurants: false,\n    Epiceries: false\n  });\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const handleCheckboxChange = option => e => {\n    setCheckboxStates({\n      ...checkboxStates,\n      [option]: e.target.checked\n    });\n  };\n  const updatePosition = (lat, lng) => {\n    setPosition([lat, lng]);\n  };\n\n  // Replace this function with Google's API for places\n  const fetchAndSetPointsForCategory = async (category, origin, shapes) => {\n    //console.log(origin, origin.lat, origin.lng);\n    try {\n      const dist = 60 * parseInt(time, 10);\n      const points = await fetchNearbyUtilities(origin.lat, origin.lng, dist, category); // distance should be 100m x time in minutes\n      console.log(points, category, dist);\n      const insidePoints = points.filter(point => isPointInsidePolygon([point.lat, point.lng], shapes));\n      console.log(insidePoints);\n      setInsidePoints(prevState => ({\n        ...prevState,\n        [category]: insidePoints\n      }));\n    } catch (error) {\n      console.error(`Error fetching ${category}:`, error);\n    }\n  };\n  useEffect(() => {\n    autocomplete = new window.google.maps.places.Autocomplete(autocompleteInput.current, {\n      types: ['geocode']\n    });\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      setAddress(place.formatted_address);\n    });\n  }, []);\n  const searchAddress = async () => {\n    const addressUri = encodeURIComponent(address);\n    //console.log(\"address\", address, \"addressUri\", addressUri);\n    console.log(apiKey);\n    const geocodingUrl = `https://maps.googleapis.com/maps/api/geocode/json?address=${addressUri}&key=AIzaSyAu05yaHnhqM-q45v0WsRj_mOgz_KGyS2s`; //to make secret later\n    try {\n      const geoResponse = await axios.get(geocodingUrl);\n      const geoData = geoResponse.data;\n      if (geoData.results && geoData.results.length > 0) {\n        const {\n          lat,\n          lng\n        } = geoData.results[0].geometry.location;\n        //console.log(lat, lng);\n        updatePosition(parseFloat(lat), parseFloat(lng));\n        //console.log(lat, lon);\n        // Ensure the time is correctly parsed as an integer\n\n        const data = await getTravelTimeData(parseFloat(lat), parseFloat(lng), parseInt(time, 10));\n        if (data && data.results && data.results[0].shapes) {\n          const isochroneShapes = data.results[0].shapes.map(shape => shape.shell);\n          setIsochrone(isochroneShapes);\n          if (isochroneShapes.length > 0) {\n            // Ensure isochroneShapes is not empty\n            try {\n              await fetchAndSetPointsForCategory('hospital', {\n                lat,\n                lng\n              }, isochroneShapes[0]);\n              await fetchAndSetPointsForCategory('restaurant', {\n                lat,\n                lng\n              }, isochroneShapes[0]);\n              await fetchAndSetPointsForCategory('supermarket', {\n                lat,\n                lng\n              }, isochroneShapes[0]);\n              await fetchAndSetPointsForCategory('park', {\n                lat,\n                lng\n              }, isochroneShapes[0]);\n              await fetchAndSetPointsForCategory('pharmacy', {\n                lat,\n                lng\n              }, isochroneShapes[0]);\n              await fetchAndSetPointsForCategory('library', {\n                lat,\n                lng\n              }, isochroneShapes[0]);\n            } catch (error) {\n              console.error('Error fetching points for category:', error);\n            }\n          }\n        }\n      } else {\n        alert('Address not found!');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to search the address or get travel time data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: autocompleteInput,\n      type: \"text\",\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Ton adresse icitte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\" // Ensures only numbers can be entered\n      ,\n      value: time,\n      onChange: e => setTime(e.target.value),\n      placeholder: \"Temps de marche en minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchAddress,\n      children: \"Chercher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(checkboxStates).map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checkboxStates[option],\n          onChange: handleCheckboxChange(option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }, this), \" \", option.replace('option', 'Option ')]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      address: address,\n      position: position,\n      isochrone: isochrone,\n      insidePoints: insidePoints,\n      checkboxStates: checkboxStates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IdQmN+PeFCDJry/6GEXGgq8KH5w=\");\n_c = App;\nfunction MapUpdater({\n  position\n}) {\n  _s2();\n  const map = useMap();\n  React.useEffect(() => {\n    map.flyTo(position, map.getZoom());\n  }, [position, map]);\n  return null; // This component does not render anything itself.\n}\n_s2(MapUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapUpdater;\nconst customIcon = new L.Icon({\n  iconUrl: pinIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst comMarkerIcon = new L.Icon({\n  iconUrl: comIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst medMarkerIcon = new L.Icon({\n  iconUrl: medIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst parcMarkerIcon = new L.Icon({\n  iconUrl: parcIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst pharmMarkerIcon = new L.Icon({\n  iconUrl: pharmIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst epiceMarkerIcon = new L.Icon({\n  iconUrl: epiceIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst restoMarkerIcon = new L.Icon({\n  iconUrl: restoIcon,\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst MapView = ({\n  address,\n  position,\n  isochrone,\n  insidePoints,\n  checkboxStates\n}) => {\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: position,\n    zoom: 14,\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [address, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }, this), \" We know where you live now.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), checkboxStates.Bibliotheques && insidePoints.library.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: comMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: point.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)), checkboxStates.CentresMedicaux && insidePoints.hospital.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: medMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: point.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)), checkboxStates.Parcs && insidePoints.park.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: parcMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: point.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)), checkboxStates.Pharmacies && insidePoints.pharmacy.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: pharmMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: point.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)), checkboxStates.Restaurants && insidePoints.restaurant.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: restoMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [point.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)), checkboxStates.Epiceries && insidePoints.supermarket.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.lat, point.lng],\n      icon: epiceMarkerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: point.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this)), isochrone.map((area, index) => /*#__PURE__*/_jsxDEV(Polygon, {\n      positions: area,\n      color: \"blue\",\n      fillOpacity: 0.3\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(MapUpdater, {\n      position: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MapView;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MapUpdater\");\n$RefreshReg$(_c3, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","Marker","Popup","useMap","getTravelTimeData","axios","Polygon","L","pinIcon","comIcon","medIcon","epiceIcon","pharmIcon","restoIcon","parcIcon","isPointInsidePolygon","fetchNearbyUtilities","jsxDEV","_jsxDEV","App","_s","position","setPosition","address","setAddress","autocompleteInput","autocomplete","time","setTime","isochrone","setIsochrone","insidePoints","setInsidePoints","library","hospital","park","pharmacy","restaurant","supermarket","checkboxStates","setCheckboxStates","Bibliotheques","CentresMedicaux","Parcs","Pharmacies","Restaurants","Epiceries","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","handleCheckboxChange","option","e","target","checked","updatePosition","lat","lng","fetchAndSetPointsForCategory","category","origin","shapes","dist","parseInt","points","console","log","filter","point","prevState","error","window","google","maps","places","Autocomplete","current","types","addListener","place","getPlace","formatted_address","searchAddress","addressUri","encodeURIComponent","geocodingUrl","geoResponse","get","geoData","data","results","length","geometry","location","parseFloat","isochroneShapes","map","shape","shell","alert","className","children","ref","type","value","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","replace","MapView","_c","MapUpdater","_s2","flyTo","getZoom","_c2","customIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","comMarkerIcon","medMarkerIcon","parcMarkerIcon","pharmMarkerIcon","epiceMarkerIcon","restoMarkerIcon","center","zoom","style","height","width","url","attribution","icon","index","name","area","positions","color","fillOpacity","_c3","$RefreshReg$"],"sources":["C:/Users/pierk/OneDrive/Desktop/courseraRxNtv/WalkReadyUs/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './App.css';\r\nimport { getTravelTimeData } from './TravelTime';\r\nimport axios from 'axios';\r\nimport { Polygon } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport pinIcon from './pin.png';\r\nimport comIcon from './com.png';\r\nimport medIcon from './med.png';\r\nimport epiceIcon from './epice.png';\r\nimport pharmIcon from './pharm.png';\r\nimport restoIcon from './resto.png';\r\nimport parcIcon from './parc.png';\r\nimport { isPointInsidePolygon } from './VerifyInside';\r\n//import { fetchAndParseCSV } from './CsvParse';\r\nimport { fetchNearbyUtilities } from './FetchNearby';\r\n\r\n\r\nfunction App() {\r\n  const [position, setPosition] = useState([45.5017, -73.5673]); // Montreal's coordinates as default\r\n  const [address, setAddress] = useState('2500 Chem. de Polytechnique, MontrÃ©al, QC H3T 1J4, Canada');\r\n  const autocompleteInput = useRef(null);\r\n  let autocomplete = null;\r\n  const [time, setTime] = useState('15'); // New state for time in minutes\r\n  const [isochrone, setIsochrone] = useState([]);\r\n  const [insidePoints, setInsidePoints] = useState({\r\n    library: [],\r\n    hospital: [],\r\n    park: [],\r\n    pharmacy: [],\r\n    restaurant: [],\r\n    supermarket: []\r\n  });\r\n  const [checkboxStates, setCheckboxStates] = useState({\r\n    Bibliotheques: false,\r\n    CentresMedicaux: false,\r\n    Parcs: false,\r\n    Pharmacies: false,\r\n    Restaurants: false,\r\n    Epiceries: false\r\n  });\r\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n\r\n  const handleCheckboxChange = (option) => (e) => {\r\n  setCheckboxStates({ ...checkboxStates, [option]: e.target.checked });\r\n  };\r\n  \r\n  const updatePosition = (lat, lng) => {\r\n    setPosition([lat, lng]);\r\n  };\r\n\r\n  // Replace this function with Google's API for places\r\n  const fetchAndSetPointsForCategory = async (category, origin, shapes) => { \r\n    //console.log(origin, origin.lat, origin.lng);\r\n    try{\r\n    const dist = 60*parseInt(time, 10);\r\n    const points = await fetchNearbyUtilities(origin.lat, origin.lng, dist, category); // distance should be 100m x time in minutes\r\n    console.log(points, category, dist);\r\n    const insidePoints = points.filter(point => \r\n      isPointInsidePolygon([point.lat, point.lng], shapes)\r\n    );\r\n    console.log(insidePoints);\r\n    setInsidePoints(prevState => ({ ...prevState, [category]: insidePoints }));\r\n    }catch (error){\r\n      console.error(`Error fetching ${category}:`, error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    autocomplete = new window.google.maps.places.Autocomplete(autocompleteInput.current,\r\n      {types: ['geocode']});\r\n\r\n    autocomplete.addListener('place_changed', () => {\r\n      const place = autocomplete.getPlace();\r\n      setAddress(place.formatted_address);\r\n    });\r\n  }, []);\r\n\r\n  const searchAddress = async () => {\r\n    const addressUri = encodeURIComponent(address);\r\n    //console.log(\"address\", address, \"addressUri\", addressUri);\r\n    console.log(apiKey);\r\n    const geocodingUrl = `https://maps.googleapis.com/maps/api/geocode/json?address=${addressUri}&key=AIzaSyAu05yaHnhqM-q45v0WsRj_mOgz_KGyS2s`; //to make secret later\r\n    try {\r\n      const geoResponse = await axios.get(geocodingUrl);\r\n      const geoData = geoResponse.data;\r\n      \r\n      if (geoData.results && geoData.results.length > 0) {\r\n        const { lat, lng } = geoData.results[0].geometry.location;\r\n        //console.log(lat, lng);\r\n        updatePosition(parseFloat(lat), parseFloat(lng));\r\n        //console.log(lat, lon);\r\n        // Ensure the time is correctly parsed as an integer\r\n\r\n        const data = await getTravelTimeData(parseFloat(lat), parseFloat(lng), parseInt(time, 10));\r\n \r\n          if (data && data.results && data.results[0].shapes) \r\n            {\r\n              const isochroneShapes = data.results[0].shapes.map(shape => shape.shell);\r\n              setIsochrone(isochroneShapes);\r\n\r\n          \r\n              if (isochroneShapes.length > 0) { // Ensure isochroneShapes is not empty\r\n                try{\r\n                  await fetchAndSetPointsForCategory('hospital', { lat, lng }, isochroneShapes[0]);\r\n                  await fetchAndSetPointsForCategory('restaurant', { lat, lng }, isochroneShapes[0]);\r\n                  await fetchAndSetPointsForCategory('supermarket', { lat, lng }, isochroneShapes[0]);\r\n                  await fetchAndSetPointsForCategory('park', { lat, lng }, isochroneShapes[0]);\r\n                  await fetchAndSetPointsForCategory('pharmacy', { lat, lng }, isochroneShapes[0]);\r\n                  await fetchAndSetPointsForCategory('library', { lat, lng }, isochroneShapes[0]);\r\n                } catch(error){\r\n                  console.error('Error fetching points for category:', error);\r\n                              }\r\n              }\r\n            }\r\n        } \r\n        else {\r\n              alert('Address not found!');\r\n             }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('Failed to search the address or get travel time data.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <input\r\n        ref={autocompleteInput}\r\n        type=\"text\"\r\n        value={address}\r\n        onChange={(e) => setAddress(e.target.value)}\r\n        placeholder=\"Ton adresse icitte\"\r\n      />\r\n       <input\r\n        type=\"number\" // Ensures only numbers can be entered\r\n        value={time}\r\n        onChange={(e) => setTime(e.target.value)}\r\n        placeholder=\"Temps de marche en minutes\"\r\n      />\r\n      <button onClick={searchAddress}>Chercher</button>\r\n\r\n          {/* Adding checkboxes */}\r\n          <div>\r\n              {Object.keys(checkboxStates).map((option) => (\r\n                <label key={option}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={checkboxStates[option]}\r\n                    onChange={handleCheckboxChange(option)}\r\n                  /> {option.replace('option', 'Option ')}\r\n                </label>\r\n              ))}\r\n          </div>\r\n\r\n\r\n\r\n      <MapView \r\n        address={address}\r\n        position={position} \r\n        isochrone={isochrone} \r\n        insidePoints={insidePoints} \r\n        checkboxStates={checkboxStates}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MapUpdater({ position }) {\r\n  const map = useMap();\r\n\r\n  React.useEffect(() => {\r\n    map.flyTo(position, map.getZoom());\r\n  }, [position, map]);\r\n\r\n  return null; // This component does not render anything itself.\r\n}\r\n\r\nconst customIcon = new L.Icon({\r\n  iconUrl: pinIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst comMarkerIcon = new L.Icon({\r\n  iconUrl: comIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst medMarkerIcon = new L.Icon({\r\n  iconUrl: medIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst parcMarkerIcon = new L.Icon({\r\n  iconUrl: parcIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst pharmMarkerIcon = new L.Icon({\r\n  iconUrl: pharmIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst epiceMarkerIcon = new L.Icon({\r\n  iconUrl: epiceIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst restoMarkerIcon = new L.Icon({\r\n  iconUrl: restoIcon,\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\n\r\nconst MapView = ({ address, position, isochrone, insidePoints, checkboxStates }) => {\r\n  return (\r\n    <MapContainer center={position} zoom={14} style={{ height: '100vh', width: '100%' }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      <Marker position={position} icon={customIcon}>\r\n        <Popup>\r\n        {address} <br/> We know where you live now.\r\n        </Popup>\r\n      </Marker>\r\n      \r\n      {checkboxStates.Bibliotheques && insidePoints.library.map((point, index) => (\r\n        <Marker key={index} position={[point.lat, point.lng]} icon={comMarkerIcon}>\r\n          <Popup>{point.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {checkboxStates.CentresMedicaux && insidePoints.hospital.map((point, index) => (\r\n        <Marker key={index} position={[point.lat, point.lng]} icon={medMarkerIcon}>\r\n          <Popup>{point.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {checkboxStates.Parcs && insidePoints.park.map((point, index) => (\r\n        <Marker key={index} position={[point.lat, point.lng]} icon={parcMarkerIcon}>\r\n          <Popup>{point.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {checkboxStates.Pharmacies && insidePoints.pharmacy.map((point, index) => (\r\n        <Marker key={index} position={[point.lat, point.lng]} icon={pharmMarkerIcon}>\r\n          <Popup>{point.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {checkboxStates.Restaurants && insidePoints.restaurant.map((point, index) => (\r\n        <Marker key={index} position={[point.lat, point.lng]} icon={restoMarkerIcon}>\r\n          <Popup>{point.name}<br /></Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {checkboxStates.Epiceries && insidePoints.supermarket.map((point, index) => (\r\n        <Marker key={index} position={[point.lat, point.lng]} icon={epiceMarkerIcon}>\r\n          <Popup>{point.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {isochrone.map((area, index) => (\r\n        <Polygon key={index} positions={area} color=\"blue\" fillOpacity={0.3} />\r\n      ))}\r\n      <MapUpdater position={position} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}