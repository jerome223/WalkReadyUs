{"ast":null,"code":"const apiKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;export const loadGoogleMapsScript=callback=>{if(window.google&&window.google.maps){callback();return;}const script=document.createElement('script');script.src=\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey,\"&libraries=places\");script.async=true;script.defer=true;script.onload=()=>callback();document.head.appendChild(script);};export const fetchNearbyUtilities=(lat,lng,radius,category)=>{//console.log(category);\nreturn new Promise((resolve,reject)=>{loadGoogleMapsScript(()=>{const service=new window.google.maps.places.PlacesService(document.createElement('div'));const request={location:new window.google.maps.LatLng(lat,lng),radius,type:category};let utilities=[];const callback=(results,status,pagination)=>{if(status===window.google.maps.places.PlacesServiceStatus.OK){utilities=utilities.concat(results.map(utility=>({name:utility.name,lat:utility.geometry.location.lat(),lng:utility.geometry.location.lng()})));// Check if there's a next page and if so, fetch more results\nif(pagination&&pagination.hasNextPage){// Wait a short time before making the next request to avoid errors\nsetTimeout(()=>pagination.nextPage(),500);}else{resolve(utilities);// No more pages or not paginating further, resolve promise\n}}else if(status===window.google.maps.places.PlacesServiceStatus.ZERO_RESULTS){resolve([]);// Resolve with an empty array for no results\n}else{reject('Failed to fetch nearby utilities');}};service.nearbySearch(request,callback);});});};","map":{"version":3,"names":["apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","loadGoogleMapsScript","callback","window","google","maps","script","document","createElement","src","concat","async","defer","onload","head","appendChild","fetchNearbyUtilities","lat","lng","radius","category","Promise","resolve","reject","service","places","PlacesService","request","location","LatLng","type","utilities","results","status","pagination","PlacesServiceStatus","OK","map","utility","name","geometry","hasNextPage","setTimeout","nextPage","ZERO_RESULTS","nearbySearch"],"sources":["C:/Users/pierk/OneDrive/Desktop/courseraRxNtv/WalkReadyUs/src/FetchNearby.js"],"sourcesContent":["const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n\r\nexport const loadGoogleMapsScript = (callback) => {\r\n    if (window.google && window.google.maps) {\r\n      callback();\r\n      return;\r\n    }\r\n  \r\n    const script = document.createElement('script');\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => callback();\r\n    document.head.appendChild(script);\r\n  };\r\n  \r\n  export const fetchNearbyUtilities = (lat, lng, radius, category) => {\r\n    //console.log(category);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      loadGoogleMapsScript(() => {\r\n        const service = new window.google.maps.places.PlacesService(document.createElement('div'));\r\n        const request = {\r\n          location: new window.google.maps.LatLng(lat, lng),\r\n          radius,\r\n          type: category,\r\n        };\r\n  \r\n        let utilities = [];\r\n  \r\n        const callback = (results, status, pagination) => {\r\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n            utilities = utilities.concat(results.map(utility => ({\r\n              name: utility.name,\r\n              lat: utility.geometry.location.lat(),\r\n              lng: utility.geometry.location.lng(),\r\n            })));\r\n  \r\n            // Check if there's a next page and if so, fetch more results\r\n            if (pagination && pagination.hasNextPage) {\r\n              // Wait a short time before making the next request to avoid errors\r\n              setTimeout(() => pagination.nextPage(), 500);\r\n            } else {\r\n              resolve(utilities); // No more pages or not paginating further, resolve promise\r\n            }\r\n          } else if (status === window.google.maps.places.PlacesServiceStatus.ZERO_RESULTS) {\r\n            resolve([]); // Resolve with an empty array for no results\r\n          } else {\r\n            reject('Failed to fetch nearby utilities');\r\n          }\r\n        };\r\n  \r\n        service.nearbySearch(request, callback);\r\n      });\r\n    });\r\n  };\r\n  "],"mappings":"AAAA,KAAM,CAAAA,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B,CAExD,MAAO,MAAM,CAAAC,oBAAoB,CAAIC,QAAQ,EAAK,CAC9C,GAAIC,MAAM,CAACC,MAAM,EAAID,MAAM,CAACC,MAAM,CAACC,IAAI,CAAE,CACvCH,QAAQ,CAAC,CAAC,CACV,OACF,CAEA,KAAM,CAAAI,MAAM,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAC/CF,MAAM,CAACG,GAAG,gDAAAC,MAAA,CAAkDb,MAAM,qBAAmB,CACrFS,MAAM,CAACK,KAAK,CAAG,IAAI,CACnBL,MAAM,CAACM,KAAK,CAAG,IAAI,CACnBN,MAAM,CAACO,MAAM,CAAG,IAAMX,QAAQ,CAAC,CAAC,CAChCK,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC,CACnC,CAAC,CAED,MAAO,MAAM,CAAAU,oBAAoB,CAAGA,CAACC,GAAG,CAAEC,GAAG,CAAEC,MAAM,CAAEC,QAAQ,GAAK,CAClE;AAEA,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtCtB,oBAAoB,CAAC,IAAM,CACzB,KAAM,CAAAuB,OAAO,CAAG,GAAI,CAAArB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACoB,MAAM,CAACC,aAAa,CAACnB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAC,CAC1F,KAAM,CAAAmB,OAAO,CAAG,CACdC,QAAQ,CAAE,GAAI,CAAAzB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACwB,MAAM,CAACZ,GAAG,CAAEC,GAAG,CAAC,CACjDC,MAAM,CACNW,IAAI,CAAEV,QACR,CAAC,CAED,GAAI,CAAAW,SAAS,CAAG,EAAE,CAElB,KAAM,CAAA7B,QAAQ,CAAGA,CAAC8B,OAAO,CAAEC,MAAM,CAAEC,UAAU,GAAK,CAChD,GAAID,MAAM,GAAK9B,MAAM,CAACC,MAAM,CAACC,IAAI,CAACoB,MAAM,CAACU,mBAAmB,CAACC,EAAE,CAAE,CAC/DL,SAAS,CAAGA,SAAS,CAACrB,MAAM,CAACsB,OAAO,CAACK,GAAG,CAACC,OAAO,GAAK,CACnDC,IAAI,CAAED,OAAO,CAACC,IAAI,CAClBtB,GAAG,CAAEqB,OAAO,CAACE,QAAQ,CAACZ,QAAQ,CAACX,GAAG,CAAC,CAAC,CACpCC,GAAG,CAAEoB,OAAO,CAACE,QAAQ,CAACZ,QAAQ,CAACV,GAAG,CAAC,CACrC,CAAC,CAAC,CAAC,CAAC,CAEJ;AACA,GAAIgB,UAAU,EAAIA,UAAU,CAACO,WAAW,CAAE,CACxC;AACAC,UAAU,CAAC,IAAMR,UAAU,CAACS,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC9C,CAAC,IAAM,CACLrB,OAAO,CAACS,SAAS,CAAC,CAAE;AACtB,CACF,CAAC,IAAM,IAAIE,MAAM,GAAK9B,MAAM,CAACC,MAAM,CAACC,IAAI,CAACoB,MAAM,CAACU,mBAAmB,CAACS,YAAY,CAAE,CAChFtB,OAAO,CAAC,EAAE,CAAC,CAAE;AACf,CAAC,IAAM,CACLC,MAAM,CAAC,kCAAkC,CAAC,CAC5C,CACF,CAAC,CAEDC,OAAO,CAACqB,YAAY,CAAClB,OAAO,CAAEzB,QAAQ,CAAC,CACzC,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}